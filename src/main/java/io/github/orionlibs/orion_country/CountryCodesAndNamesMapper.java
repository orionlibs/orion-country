package io.github.orionlibs.orion_country;

import java.util.Map;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;

public class CountryCodesAndNamesMapper
{
    public static final ConcurrentMap<String, String> mapper = new ConcurrentHashMap<>();

    static
    {
        mapper.put("AFG", "Afghanistan");
        mapper.put("ALA", "Aland Islands");
        mapper.put("ALB", "Albania");
        mapper.put("DZA", "Algeria");
        mapper.put("ASM", "American Samoa");
        mapper.put("AND", "Andorra");
        mapper.put("AGO", "Angola");
        mapper.put("AIA", "Anguilla");
        mapper.put("ATA", "Antarctica");
        mapper.put("ATG", "Antigua and Barbuda");
        mapper.put("ARG", "Argentina");
        mapper.put("ARM", "Armenia");
        mapper.put("ABW", "Aruba");
        mapper.put("AUS", "Australia");
        mapper.put("AUT", "Austria");
        mapper.put("AZE", "Azerbaijan");
        mapper.put("BHS", "Bahamas");
        mapper.put("BHR", "Bahrain");
        mapper.put("BGD", "Bangladesh");
        mapper.put("BRB", "Barbados");
        mapper.put("BLR", "Belarus");
        mapper.put("BEL", "Belgium");
        mapper.put("BLZ", "Belize");
        mapper.put("BEN", "Benin");
        mapper.put("BMU", "Bermuda");
        mapper.put("BTN", "Bhutan");
        mapper.put("BOL", "Bolivia, Plurinational State of");
        mapper.put("BES", "Bonaire, Sint Eustatius and Saba");
        mapper.put("BIH", "Bosnia and Herzegovina");
        mapper.put("BWA", "Botswana");
        mapper.put("BVT", "Bouvet Island");
        mapper.put("BRA", "Brazil");
        mapper.put("IOT", "British Indian Ocean Territory");
        mapper.put("BRN", "Brunei Darussalam");
        mapper.put("BGR", "Bulgaria");
        mapper.put("BFA", "Burkina Faso");
        mapper.put("BDI", "Burundi");
        mapper.put("KHM", "Cambodia");
        mapper.put("CMR", "Cameroon");
        mapper.put("CAN", "Canada");
        mapper.put("CPV", "Cape Verde");
        mapper.put("CYM", "Cayman Islands");
        mapper.put("CAF", "Central African Republic");
        mapper.put("TCD", "Chad");
        mapper.put("CHL", "Chile");
        mapper.put("CHN", "China");
        mapper.put("CXR", "Christmas Island");
        mapper.put("CCK", "Cocos (Keeling) Islands");
        mapper.put("COL", "Colombia");
        mapper.put("COM", "Comoros");
        mapper.put("COG", "Congo");
        mapper.put("COD", "Congo, the Democratic Republic of the");
        mapper.put("COK", "Cook Islands");
        mapper.put("CRI", "Costa Rica");
        mapper.put("CIV", "Cote d'Ivoire");
        mapper.put("HRV", "Croatia");
        mapper.put("CUB", "Cuba");
        mapper.put("CUW", "Curacao");
        mapper.put("CYP", "Cyprus");
        mapper.put("CZE", "Czech Republic");
        mapper.put("DNK", "Denmark");
        mapper.put("DJI", "Djibouti");
        mapper.put("DMA", "Dominica");
        mapper.put("DOM", "Dominican Republic");
        mapper.put("ECU", "Ecuador");
        mapper.put("EGY", "Egypt");
        mapper.put("SLV", "El Salvador");
        mapper.put("GNQ", "Equatorial Guinea");
        mapper.put("ERI", "Eritrea");
        mapper.put("EST", "Estonia");
        mapper.put("ETH", "Ethiopia");
        mapper.put("FLK", "Falkland Islands (Malvinas)");
        mapper.put("FRO", "Faroe Islands");
        mapper.put("FJI", "Fiji");
        mapper.put("FIN", "Finland");
        mapper.put("FRA", "France");
        mapper.put("GUF", "French Guiana");
        mapper.put("PYF", "French Polynesia");
        mapper.put("ATF", "French Southern Territories");
        mapper.put("GAB", "Gabon");
        mapper.put("GMB", "Gambia");
        mapper.put("GEO", "Georgia");
        mapper.put("DEU", "Germany");
        mapper.put("GHA", "Ghana");
        mapper.put("GIB", "Gibraltar");
        mapper.put("GRC", "Greece");
        mapper.put("GRL", "Greenland");
        mapper.put("GRD", "Grenada");
        mapper.put("GLP", "Guadeloupe");
        mapper.put("GUM", "Guam");
        mapper.put("GTM", "Guatemala");
        mapper.put("GGY", "Guernsey");
        mapper.put("GIN", "Guinea");
        mapper.put("GNB", "Guinea-Bissau");
        mapper.put("GUY", "Guyana");
        mapper.put("HTI", "Haiti");
        mapper.put("HMD", "Heard Island and McDonald Islands");
        mapper.put("VAT", "Holy See (Vatican City State)");
        mapper.put("HND", "Honduras");
        mapper.put("HKG", "Hong Kong");
        mapper.put("HUN", "Hungary");
        mapper.put("ISL", "Iceland");
        mapper.put("IND", "India");
        mapper.put("IDN", "Indonesia");
        mapper.put("IRN", "Iran, Islamic Republic of");
        mapper.put("IRQ", "Iraq");
        mapper.put("IRL", "Ireland");
        mapper.put("IMN", "Isle of Man");
        mapper.put("ISR", "Israel");
        mapper.put("ITA", "Italy");
        mapper.put("JAM", "Jamaica");
        mapper.put("JPN", "Japan");
        mapper.put("JEY", "Jersey");
        mapper.put("JOR", "Jordan");
        mapper.put("KAZ", "Kazakhstan");
        mapper.put("KEN", "Kenya");
        mapper.put("KIR", "Kiribati");
        mapper.put("PRK", "Korea, Democratic People's Republic of");
        mapper.put("KOR", "Korea, Republic of");
        mapper.put("KWT", "Kuwait");
        mapper.put("KGZ", "Kyrgyzstan");
        mapper.put("LAO", "Lao People's Democratic Republic");
        mapper.put("LVA", "Latvia");
        mapper.put("LBN", "Lebanon");
        mapper.put("LSO", "Lesotho");
        mapper.put("LBR", "Liberia");
        mapper.put("LBY", "Libya");
        mapper.put("LIE", "Liechtenstein");
        mapper.put("LTU", "Lithuania");
        mapper.put("LUX", "Luxembourg");
        mapper.put("MAC", "Macao");
        mapper.put("MKD", "Macedonia, the former Yugoslav Republic of");
        mapper.put("MDG", "Madagascar");
        mapper.put("MWI", "Malawi");
        mapper.put("MYS", "Malaysia");
        mapper.put("MDV", "Maldives");
        mapper.put("MLI", "Mali");
        mapper.put("MLT", "Malta");
        mapper.put("MHL", "Marshall Islands");
        mapper.put("MTQ", "Martinique");
        mapper.put("MRT", "Mauritania");
        mapper.put("MUS", "Mauritius");
        mapper.put("MYT", "Mayotte");
        mapper.put("MEX", "Mexico");
        mapper.put("FSM", "Micronesia, Federated States of");
        mapper.put("MDA", "Moldova, Republic of");
        mapper.put("MCO", "Monaco");
        mapper.put("MNG", "Mongolia");
        mapper.put("MNE", "Montenegro");
        mapper.put("MSR", "Montserrat");
        mapper.put("MAR", "Morocco");
        mapper.put("MOZ", "Mozambique");
        mapper.put("MMR", "Myanmar");
        mapper.put("NAM", "Namibia");
        mapper.put("NRU", "Nauru");
        mapper.put("NPL", "Nepal");
        mapper.put("NLD", "Netherlands");
        mapper.put("NCL", "New Caledonia");
        mapper.put("NZL", "New Zealand");
        mapper.put("NIC", "Nicaragua");
        mapper.put("NER", "Niger");
        mapper.put("NGA", "Nigeria");
        mapper.put("NIU", "Niue");
        mapper.put("NFK", "Norfolk Island");
        mapper.put("MNP", "Northern Mariana Islands");
        mapper.put("NOR", "Norway");
        mapper.put("OMN", "Oman");
        mapper.put("PAK", "Pakistan");
        mapper.put("PLW", "Palau");
        mapper.put("PSE", "Palestinian Territory, Occupied");
        mapper.put("PAN", "Panama");
        mapper.put("PNG", "Papua New Guinea");
        mapper.put("PRY", "Paraguay");
        mapper.put("PER", "Peru");
        mapper.put("PHL", "Philippines");
        mapper.put("PCN", "Pitcairn");
        mapper.put("POL", "Poland");
        mapper.put("PRT", "Portugal");
        mapper.put("PRI", "Puerto Rico");
        mapper.put("QAT", "Qatar");
        mapper.put("REU", "Reunion");
        mapper.put("ROU", "Romania");
        mapper.put("RUS", "Russian Federation");
        mapper.put("RWA", "Rwanda");
        mapper.put("BLM", "Saint Barthelemy");
        mapper.put("SHN", "Saint Helena, Ascension and Tristan da Cunha");
        mapper.put("KNA", "Saint Kitts and Nevis");
        mapper.put("LCA", "Saint Lucia");
        mapper.put("MAF", "Saint Martin (French part)");
        mapper.put("SPM", "Saint Pierre and Miquelon");
        mapper.put("VCT", "Saint Vincent and the Grenadines");
        mapper.put("WSM", "Samoa");
        mapper.put("SMR", "San Marino");
        mapper.put("STP", "Sao Tome and Principe");
        mapper.put("SAU", "Saudi Arabia");
        mapper.put("SEN", "Senegal");
        mapper.put("SRB", "Serbia");
        mapper.put("SYC", "Seychelles");
        mapper.put("SLE", "Sierra Leone");
        mapper.put("SGP", "Singapore");
        mapper.put("SXM", "Sint Maarten (Dutch part)");
        mapper.put("SVK", "Slovakia");
        mapper.put("SVN", "Slovenia");
        mapper.put("SLB", "Solomon Islands");
        mapper.put("SOM", "Somalia");
        mapper.put("ZAF", "South Africa");
        mapper.put("SGS", "South Georgia and the South Sandwich Islands");
        mapper.put("SSD", "South Sudan");
        mapper.put("ESP", "Spain");
        mapper.put("LKA", "Sri Lanka");
        mapper.put("SDN", "Sudan");
        mapper.put("SUR", "Suriname");
        mapper.put("SJM", "Svalbard and Jan Mayen");
        mapper.put("SWZ", "Swaziland");
        mapper.put("SWE", "Sweden");
        mapper.put("CHE", "Switzerland");
        mapper.put("SYR", "Syrian Arab Republic");
        mapper.put("TWN", "Taiwan, Province of China");
        mapper.put("TJK", "Tajikistan");
        mapper.put("TZA", "Tanzania, United Republic of");
        mapper.put("THA", "Thailand");
        mapper.put("TLS", "Timor-Leste");
        mapper.put("TGO", "Togo");
        mapper.put("TKL", "Tokelau");
        mapper.put("TON", "Tonga");
        mapper.put("TTO", "Trinidad and Tobago");
        mapper.put("TUN", "Tunisia");
        mapper.put("TUR", "Turkey");
        mapper.put("TKM", "Turkmenistan");
        mapper.put("TCA", "Turks and Caicos Islands");
        mapper.put("TUV", "Tuvalu");
        mapper.put("UGA", "Uganda");
        mapper.put("UKR", "Ukraine");
        mapper.put("ARE", "United Arab Emirates");
        mapper.put("GBR", "United Kingdom");
        mapper.put("USA", "United States");
        mapper.put("UMI", "United States Minor Outlying Islands");
        mapper.put("URY", "Uruguay");
        mapper.put("UZB", "Uzbekistan");
        mapper.put("VUT", "Vanuatu");
        mapper.put("VEN", "Venezuela, Bolivarian Republic of");
        mapper.put("VNM", "Viet Nam");
        mapper.put("VGB", "Virgin Islands, British");
        mapper.put("VIR", "Virgin Islands, U.S.");
        mapper.put("WLF", "Wallis and Futuna");
        mapper.put("ESH", "Western Sahara");
        mapper.put("YEM", "Yemen");
        mapper.put("ZMB", "Zambia");
        mapper.put("ZWE", "Zimbabwe");
    }

    public static String getCountryCodeFromName(String countryName)
    {
        for(Map.Entry<String, String> countryCodeToName : mapper.entrySet())
        {
            if(countryCodeToName.getValue().equals(countryName))
            {
                return countryCodeToName.getKey();
            }
        }
        return null;
    }
}